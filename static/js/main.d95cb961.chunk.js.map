{"version":3,"sources":["star.svg","unfilled.svg","halfstar.svg","marker.png","pin.png","components/List.js","components/Loading.js","components/loadData.js","components/Nav.js","components/restaurantsNear.js","components/RestaurantDetails.js","components/MapWidget.js","components/RestaurantsMap.js","components/SearchRestaurants.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ListItem","props","newTo","pathname","id","res","className","to","src","image_url","alt","name","categories","title","location","address1","price","List","restaurants","length","term","near","city","search","type","map","restaurant","key","Loading","fullscreen","loadData","Component","queries","isLoading","useState","loading","data","appState","setAppState","useEffect","limit","console","log","apiUrl","axios","get","headers","Authorization","process","params","then","obj","businesses","Nav","color","RestaurantsNearContent","RestaurantsNear","latitude","longitude","query","setQuery","navigator","geolocation","getCurrentPosition","position","coords","error","ContentLoading","onSubmit","evt","preventDefault","val","document","getElementById","value","alert","placeholder","RestaurantDetailsContent","stars","filled","Math","floor","rating","i","push","half","unfilled","style","index","DisplayStar","review_count","lat","coordinates","long","x","abs","y","round","sqrt","calcDistance","display_address","display_phone","filledStar","unfilledStar","halfStar","RestaurantDetails","GoogleApiWrapper","apiKey","displayMarkers","points","store","lng","icon","url","customIcon","scaledSize","google","maps","Size","mapStyle","zoom","width","height","initialCenter","onReady","mapProps","setOptions","styles","_mapLoaded","youAreHere","RestaurantsMapContent","RestaurantsMap","SearchRestaurantsContent","SearchRestaurants","App","basename","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"4HAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,+LCgCrCC,EAAW,SAACC,GAChB,IAAMC,EAAQ,CACZC,SAAU,WACVC,GAAIH,EAAMI,IAAID,IAEhB,OACE,yBAAKE,UAAU,2BACb,kBAAC,IAAD,CAAMC,GAAIL,GACR,yBAAKI,UAAU,mBACb,yBAAKA,UAAU,uBACb,yBAAKE,IAAKP,EAAMI,IAAII,UAAWC,IAAKT,EAAMI,IAAIM,QAEhD,yBAAKL,UAAU,wBACb,uBAAGA,UAAU,WAAWL,EAAMI,IAAIO,WAAW,GAAGC,OAChD,4BAAKZ,EAAMI,IAAIM,MACf,yBAAKL,UAAU,sBACb,2BAAIL,EAAMI,IAAIS,SAASC,UACvB,2BAAId,EAAMI,IAAIW,aASbC,EAvDF,SAAChB,GAAW,IACfiB,EAAgBjB,EAAhBiB,YAER,IAAKA,GAAsC,IAAvBA,EAAYC,OAAc,OAAO,oDAErD,IAKMC,EAAO,CACXC,KAAMH,EAAY,GAAGJ,SAASQ,KAC9BC,OAAQtB,EAAMmB,MAGhB,OACE,yBAAKd,UAAU,aACb,wBAAIA,UAAU,aAZA,CAChBe,KAAM,iBACNE,OAAQ,sBAU+BtB,EAAMuB,MAA3C,IAAkD,0BAAMlB,UAAU,YAAYc,EAAKnB,EAAMuB,QACzF,yBAAKlB,UAAU,sBACZY,EAAYO,KAAI,SAACC,GAChB,OACE,kBAAC,EAAD,CAAUrB,IAAKqB,EAAYC,IAAKD,EAAWtB,W,yBCdxCwB,MARf,SAAiB3B,GAChB,OACC,yBAAKK,UAAW,YAAcL,EAAM4B,WAAa,GAAK,UACrD,yBAAKvB,UAAU,qBC8BHwB,MA/Bf,SAAkBC,EAAWC,EAASH,EAAYzB,GAChD,OAAO,YAAsD,EAAvB6B,UAAwB,IAAVhC,EAAS,+BAC9BiC,mBAAS,CACxCC,SAAS,EACTC,KAAM,OAHuD,mBACvDC,EADuD,KAC7CC,EAD6C,KAuB3D,OAjBHC,qBAAU,WACTD,EAAY,CAAEH,SAAS,IACvBH,EAAQQ,MAAQ,GAChBC,QAAQC,IAAIV,GACZ,IAAMW,EAASvC,EAAQ,uCAAN,6CAAkFA,GAAU,uCAA5F,oDACjBwC,IAAMC,IAAIF,EAAQ,CACjBG,QAAS,CACRC,cAAc,UAAD,OAAYC,qIAE1BC,OAAQjB,IAERkB,MAAK,SAAC7C,GACN,IAAI8C,EAAM9C,EAAI+B,KAAKgB,YAAc/C,EAAI+B,KACrCE,EAAY,CAAEH,SAAS,EAAOC,KAAMe,SAEnC,CAACb,IAEID,EAASF,QAEZ,kBAAC,EAAD,CAASN,WAAYA,IAFO,kBAACE,EAAD,iBAAe9B,EAAf,CAAsBmC,KAAMC,EAASD,UCJxDiB,MArBf,SAAapD,GACZ,OACC,yBAAKK,UAA2B,UAAhBL,EAAMqD,MAAoB,UAAY,IAC9C,4BACE,4BACE,kBAAC,IAAD,CAAM/C,GAAG,KAAT,yBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,uBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,uBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,QAAT,gBCuDd,SAASgD,EAAuBtD,GAC/B,OACC,kBAAC,EAAD,CAAMiB,YAAajB,EAAMmC,KAAMZ,KAAK,SAIvBgC,MAxEf,SAAyBvD,GAAQ,IAAD,EACCiC,mBAAS,CACxCC,SAAS,IAFqB,mBACxBE,EADwB,KACdC,EADc,OAKLJ,mBAAS,CAClCuB,SAAU,KACVC,UAAW,KACX5C,SAAU,WACVF,WAAY,gBATkB,mBAKxB+C,EALwB,KAKjBC,EALiB,KAoC/B,GAxBArB,qBAAU,WACTsB,UAAUC,YAAYC,oBACrB,SAASC,GACR1B,EAAY,CAACH,SAAS,IACnByB,EAAS,CAACH,SAAUO,EAASC,OAAOR,SAAUC,UAAWM,EAASC,OAAOP,UAAW9C,WAAY+C,EAAM/C,gBAEvG,SAASsD,GACR5B,EAAY,CAACH,SAAS,IACtByB,EAAS,CAAC9C,SAAU,WAAYF,WAAY+C,EAAM/C,kBAGrD,CAAC0B,KAaAD,EAASF,QAAS,CACrB,IAAMgC,EAAiBrC,EAASyB,EAAwBI,GAAO,GAC/D,OACC,6BACC,kBAAC,EAAD,MACA,yBAAKrD,UAAU,kBACd,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,kBACd,kEACA,0BAAM8D,SArBU,SAACC,GACjBA,EAAIC,iBACJ,IAAIC,EAAMC,SAASC,eAAe,eAAeC,MACtC,KAARH,GAAsB,OAARA,GAAwB,MAARA,GAChCX,EAAS,CAAC9C,SAAUyD,EAAK3D,WAAY+C,EAAM/C,aAC3C6B,QAAQC,IAAR,0BAA+BiB,EAAMvC,QAErCuD,MAAM,8CAeN,2BACCnD,KAAK,OACLoD,YAAY,WACZxE,GAAG,gBAEJ,2BAAOoB,KAAK,cAIf,kBAAC2C,EAAD,OAIH,OACC,kBAAC,EAAD,CAAStC,YAAY,K,mDC5BvB,SAASgD,EAAyB5E,GAGjC,IAFA,IAAI6E,EAAQ,GACRC,EAASC,KAAKC,MAAMhF,EAAMmC,KAAK8C,QAC3BC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BL,EAAMM,KAAK,UAEZ,IAAIC,EAAO,EACRpF,EAAMmC,KAAK8C,OAAS,IAAM,IAC5BJ,EAAMM,KAAK,QACXC,EAAO,GAGR,IADA,IAAIC,EAAW,EAAIP,EAASM,EACpBF,EAAI,EAAGA,EAAIG,EAAUH,IAC5BL,EAAMM,KAAK,YAWZ,OACC,yBAAK9E,UAAU,sBACd,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBAAiBiF,MAAO,CAAC,gBAAkB,OAAStF,EAAMmC,KAAK3B,UAAW,OAEzF,yBAAKH,UAAU,aACd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,gBACd,4BAAKL,EAAMmC,KAAKzB,MAChB,yBAAKL,UAAU,WACd,yBAAKA,UAAU,kBACdwE,EAAMrD,KAAI,SAACD,EAAMgE,GAAP,OAAiB,kBAACC,EAAD,CAAajE,KAAMA,EAAMG,IAAK6D,QAE1D,2BAAIvF,EAAMmC,KAAKsD,aAAe,aAE9BzF,EAAM0F,IAAM,2BAvBG,WACpB,IAAIA,EAAM1F,EAAMmC,KAAKwD,YAAYnC,SAC7BoC,EAAO5F,EAAMmC,KAAKwD,YAAYlC,UAC9BoC,EAAId,KAAKe,IAAIJ,EAAM1F,EAAM0F,KACzBK,EAAIhB,KAAKe,IAAIF,EAAO5F,EAAM4F,MAC9B,OAAOb,KAAKiB,MAA6B,KAAvBjB,KAAKkB,KAAKJ,EAAEA,EAAIE,EAAEA,IAAY,IAkB3BG,GAAJ,YAAkC,IAEhD,yBAAK7F,UAAU,iBACd,yBAAKA,UAAU,WACd,uCACA,2BAAIL,EAAMmC,KAAKtB,SAASsF,gBAAgB,IACxC,2BAAInG,EAAMmC,KAAKtB,SAASsF,gBAAgB,KAEzC,yBAAK9F,UAAU,SACd,qCACA,2BAAIL,EAAMmC,KAAKiE,oBAStB,SAASZ,EAAYxF,GACpB,IAAMO,EAAM,CACX,OAAU8F,IACV,SAAYC,IACZ,KAAQC,KAET,OACC,yBAAKhG,IAAKA,EAAIP,EAAMuB,MAAOd,IAAI,eAIlB+F,MApGf,SAA2BxG,GAAQ,IAAD,EACDiC,mBAAS,CACxCuB,SAAU,KACVC,UAAW,KACXvB,SAAS,IAJuB,mBAC1BE,EAD0B,KAChBC,EADgB,KAO7BlC,EAAKH,EAAMa,SAASV,IAAM,yBAa9B,GAXAmC,qBAAU,WACTsB,UAAUC,YAAYC,oBACrB,SAASC,GACR1B,EAAY,CAACmB,SAAUO,EAASC,OAAOR,SAAUC,UAAWM,EAASC,OAAOP,UAAWvB,SAAS,OAE9F,SAAS+B,GACR5B,EAAY,CAACxB,SAAU,WAAYqB,SAAS,SAG/C,CAACG,KAEAD,EAASF,QAAS,CACrB,IAAMgC,EAAiBrC,EAAS+C,EAA0B,IAAI,EAAMzE,GACpE,OACC,kBAAC+D,EAAD,CAAgBwB,IAAKtD,EAASoB,SAAUoC,KAAMxD,EAASqB,YAGzD,OACC,kBAAC,EAAD,CAAS7B,YAAY,K,0CCsLR6E,iCAAiB,CAC9BC,OAAO,GAAD,OAAK3D,4CADE0D,EAlNf,SAAmBzG,GAClB,IAKMgE,EAAS,CACd0B,IAAK1F,EAAMwD,UAAY,UACvBoC,KAAM5F,EAAMyD,YAAc,WAGrBkD,EAAiB3G,EAAM4G,OAAOpF,KAAI,SAACqF,EAAOtB,GAC5C,OAAO,kBAAC,SAAD,CAAQ7D,IAAK6D,EAAOpF,GAAIoF,EAAOxB,SAAU,CAC7C2B,IAAKmB,EAAMlB,YAAYnC,SACvBsD,IAAKD,EAAMlB,YAAYlC,WAE1BsD,KAAM,CACJC,IAAKC,IACLC,WAAY,IAAIC,OAAOC,KAAKC,KAAK,GAAG,UAIpCC,EAAW,CACb,CACI,YAAe,iBACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,MACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,MACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,OACf,YAAe,MACf,QAAW,CACP,CACI,YAAe,KAEnB,CACI,UAAa,MAIzB,CACI,YAAe,eACf,YAAe,MACf,QAAW,CACP,CACI,WAAc,gBAI1B,CACI,YAAe,eACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,OAElB,CACI,UAAa,QAIzB,CACI,YAAe,gBACf,YAAe,MACf,QAAW,CACP,CACI,WAAc,gBAI1B,CACI,YAAe,gBACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,UAAa,QAIzB,CACI,YAAe,gBACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,aACf,YAAe,MACf,QAAW,CACP,CACI,WAAc,QAI1B,CACI,YAAe,aACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,gBAI1B,CACI,YAAe,UACf,YAAe,MACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,QACf,YAAe,MACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,QAI1B,CACI,YAAe,QACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,OAElB,CACI,UAAa,SAY1B,OACI,kBAAC,MAAD,CACEH,OAAQnH,EAAMmH,OACdI,KAAM,GACNjC,MA9LS,CAChBkC,MAAO,OACPC,OAAQ,QA6LDC,cAAe,CAAEhC,IAAK1B,EAAO0B,IAAKoB,IAAK9C,EAAO4B,MAC9C+B,QAAS,SAACC,EAAUpG,GAAX,OAZE,SAACoG,EAAUpG,GAC3BA,EAAIqG,WAAW,CACZC,OAAQR,IAUsBS,CAAWH,EAAUpG,KAElD,kBAAC,SAAD,CACCE,IAAK,KACRhB,KAAM,gBACNqD,SAAU,CAAE2B,IAAK1B,EAAO0B,IAAKoB,IAAK9C,EAAO4B,MACzCmB,KAAM,CACJC,IAAKgB,IACLd,WAAY,IAAIC,OAAOC,KAAKC,KAAK,GAAG,OAGnCV,MC7KV,SAASsB,EAAsBjI,GAC9B,OACC,yBAAKK,UAAU,mBACd,kBAAC,EAAD,CAAKgD,MAAM,UACX,yBAAKhD,UAAU,2BACd,yBAAKA,UAAU,gBACd,kBAAC,EAAD,CAAMY,YAAajB,EAAMmC,KAAMZ,KAAK,UAErC,yBAAKlB,UAAU,eACd,kBAAC,EAAD,CAAWmD,SAAUxD,EAAMwD,SAAUC,UAAWzD,EAAMyD,UAAWmD,OAAQ5G,EAAMmC,UAOrE+F,MA/Cf,SAAwBlI,GAAQ,IAAD,EACEiC,mBAAS,CACxCuB,SAAU,KACVC,UAAW,KACX5C,SAAU,KACVqB,SAAS,IALoB,mBACvBE,EADuB,KACbC,EADa,KAmB9B,GAXAC,qBAAU,WACTsB,UAAUC,YAAYC,oBACrB,SAASC,GACR1B,EAAY,CAACmB,SAAUO,EAASC,OAAOR,SAAUC,UAAWM,EAASC,OAAOP,UAAWvB,SAAS,OAE9F,SAAS+B,GACR5B,EAAY,CAACxB,SAAU,WAAYqB,SAAS,SAG/C,CAACG,KAEAD,EAASF,QAAS,CACrB,IAAMgC,EAAiBrC,EAASoG,EAAuB,CAACzE,SAAUpB,EAASoB,SAAUC,UAAWrB,EAASqB,UAAW5C,SAAU,WAAYF,WAAY,gBAAgB,GACtK,OACC,kBAACuD,EAAD,CAAgBV,SAAUpB,EAASoB,SAAUC,UAAWrB,EAASqB,YAGnE,OACC,kBAAC,EAAD,CAAS7B,YAAY,KCwCvB,SAASuG,EAAyBnI,GACjC,OACC,kBAAC,EAAD,CAAMiB,YAAajB,EAAMmC,KAAMZ,KAAK,SAASJ,KAAMnB,EAAMmB,OAI5CiH,MAzEf,SAA2BpI,GAAQ,IAAD,EACDiC,mBAAS,CACxCC,SAAS,IAFuB,mBAC1BE,EAD0B,KAChBC,EADgB,OAKPJ,mBAAS,CAClCuB,SAAU,KACVC,UAAW,KACX5C,SAAU,KACVM,KAAM,cAT0B,mBAK1BuC,EAL0B,KAKnBC,EALmB,KAoC/B,GAxBFrB,qBAAU,WACTsB,UAAUC,YAAYC,oBACrB,SAASC,GACR1B,EAAY,CAACH,SAAS,IACnByB,EAAS,CAACH,SAAUO,EAASC,OAAOR,SAAUC,UAAWM,EAASC,OAAOP,UAAWtC,KAAMuC,EAAMvC,UAEjG,SAAS8C,GACR5B,EAAY,CAACH,SAAS,IACtByB,EAAS,CAAC9C,SAAU,WAAYM,KAAMuC,EAAMvC,YAG/C,CAACkB,KAaED,EAASF,QAAS,CACvB,IAAMgC,EAAiBrC,EAASsG,EAA0BzE,GAAO,GAEjE,OACC,6BACC,kBAAC,EAAD,MACA,yBAAKrD,UAAU,kBACd,yBAAKA,UAAU,WAEf,yBAAKA,UAAU,kBACd,kEACA,0BAAM8D,SAtBU,SAACC,GACjBA,EAAIC,iBACJ,IAAIC,EAAMC,SAASC,eAAe,eAAeC,MACtC,KAARH,GAAsB,OAARA,GAAwB,MAARA,GAChCX,EAAS,CAACxC,KAAMmD,EAAKzD,SAAU6C,EAAM7C,SAAU2C,SAAUE,EAAMF,SAAUC,UAAWC,EAAMD,YAC1FjB,QAAQC,IAAR,0BAA+BiB,EAAMvC,QAErCuD,MAAM,8CAgBN,2BACCnD,KAAK,OACLoD,YAAY,SACZxE,GAAG,gBAEJ,2BAAOoB,KAAK,cAIf,kBAAC2C,EAAD,CAAgB/C,KAAMuC,EAAMvC,QAK/B,OACC,kBAAC,EAAD,CAASS,YAAY,KC3CRyG,MAdf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUvF,4BAChB,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwF,KAAK,WAAWC,UAAWhC,IAClC,kBAAC,IAAD,CAAO+B,KAAK,OAAOC,UAAWN,IAC9B,kBAAC,IAAD,CAAOK,KAAK,UAAUC,UAAWJ,IACjC,kBAAC,IAAD,CAAOG,KAAK,IAAIC,UAAWjF,EAAiBkF,OAAK,QCRvCC,QACW,cAA7BC,OAAO9H,SAAS+H,UAEe,UAA7BD,OAAO9H,SAAS+H,UAEhBD,OAAO9H,SAAS+H,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzE,SAASC,eAAe,SDyHpB,kBAAmBZ,WACrBA,UAAUqF,cAAcC,MACrBjG,MAAK,SAAAkG,GACJA,EAAaC,gBAEdC,OAAM,SAAApF,GACLzB,QAAQyB,MAAMA,EAAMqF,c","file":"static/js/main.d95cb961.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.967d62c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/unfilled.77ac57be.svg\";","module.exports = __webpack_public_path__ + \"static/media/halfstar.74f8e421.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker.f00d58bd.png\";","module.exports = __webpack_public_path__ + \"static/media/pin.a07280f4.png\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst List = (props) => {\n  const { restaurants } = props;\n\n  if (!restaurants || restaurants.length === 0) return <p>No restaurants, sorry</p>;\n\n  const headlines = {\n    near: 'Restaurants in',\n    search: 'Search results for'\n  }\n\n  const term = {\n    near: restaurants[0].location.city,\n    search: props.term\n  }\n\n  return (\n    <div className=\"container\">\n      <h2 className='list-head'>{headlines[props.type]} <span className=\"location\">{term[props.type]}</span></h2>\n      <div className=\"restaurant-wrapper\">\n        {restaurants.map((restaurant) => {\n          return (\n            <ListItem res={restaurant} key={restaurant.id}/>\n          );\n        })}\n        </div>\n    </div>\n  );\n};\n\nconst ListItem = (props) => {\n  const newTo = { \n    pathname: \"/details\", \n    id: props.res.id\n  };\n  return(\n    <div className=\"restaurant-card-wrapper\">\n      <Link to={newTo}>\n        <div className=\"restaurant-card\">\n          <div className=\"restaurant-card-img\">\n            <img src={props.res.image_url} alt={props.res.name} />\n          </div>\n          <div className=\"restaurant-card-text\">\n            <p className=\"cuisine\">{props.res.categories[0].title}</p>\n            <h3>{props.res.name}</h3>\n            <div className=\"restaurant-details\">\n              <p>{props.res.location.address1}</p>\n              <p>{props.res.price}</p>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default List;","import React from 'react';\n\nfunction Loading(props) {\n\treturn (\n\t\t<div className={\"loading \" + (props.fullscreen ? \"\" : \"small\")}>\n\t\t\t<div className=\"loading-symbol\"></div>\n\t\t</div>\n\t);\n}\n\nexport default Loading;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Loading from './Loading';\n\nfunction loadData(Component, queries, fullscreen, id) {\n  return function WihLoadingComponent({ isLoading, ...props }) {\n\tconst [appState, setAppState] = useState({\n\t\tloading: true,\n\t\tdata: null,\n\t});\n\n\tuseEffect(() => {\n\t\tsetAppState({ loading: true });\n\t\tqueries.limit = 18;\n\t\tconsole.log(queries);\n\t\tconst apiUrl = id ? `${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/${id}` : `${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`;\n\t\taxios.get(apiUrl, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${process.env.REACT_APP_YELP_API_KEY}`\n\t\t\t},\n\t\t\tparams: queries\n\t\t})\n\t\t.then((res) => {\n\t\t\tlet obj = res.data.businesses || res.data;\n\t\t\tsetAppState({ loading: false, data: obj});\n\t\t});\n\t}, [setAppState]);\n\n    if (!appState.loading) return <Component {...props} data={appState.data} />;\n    return (\n      <Loading fullscreen={fullscreen}/>\n    );\n  };\n}\n\nexport default loadData;","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nfunction Nav(props) {\n\treturn (\n\t\t<nav className={props.color === 'white' ? \"map-nav\" : \"\"}>\n          <ul>\n            <li>\n              <Link to=\"/\">Restaurants Near You</Link>\n            </li>\n            <li>\n              <Link to=\"/details\">Restaurant Details</Link>\n            </li>\n            <li>\n              <Link to=\"/search\">Search Restaurants</Link>\n            </li>\n            <li>\n              <Link to=\"/map\">Map View</Link>\n            </li>\n          </ul>\n        </nav>\n\t);\n}\n\nexport default Nav;","import React, { useEffect, useState } from 'react';\nimport List from './List';\nimport loadData from './loadData';\nimport Loading from './Loading';\nimport Nav from './Nav';\n\nfunction RestaurantsNear(props) {\n\tconst [appState, setAppState] = useState({\n\t\tloading: true\n\t});\n\n\tconst [query, setQuery] = useState({\n\t\tlatitude: null,\n\t\tlongitude: null,\n\t\tlocation: 'new york',\n\t\tcategories: 'restaurants'\n\t});\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tfunction(position) {\n\t\t\t\tsetAppState({loading: false});\n\t\t    \tsetQuery({latitude: position.coords.latitude, longitude: position.coords.longitude, categories: query.categories});\n\t    \t},\n\t\t    function(error) {\n\t\t    \tsetAppState({loading: false});\n\t\t    \tsetQuery({location: 'new york', categories: query.categories});\n\t\t    }\n\t    );\n\t}, [setAppState]);\n\n\tconst handleSubmit = (evt) => {\n      evt.preventDefault();\n      let val = document.getElementById('search-term').value;\n      if(val !== \"\" && val !== null && val !== \" \") {\n      \tsetQuery({location: val, categories: query.categories});\n      \tconsole.log(`Submitting Term ${query.term}`);\n      } else {\n      \talert('Please enter text into the search field!');\n      }\n  \t}\n\n\tif(!appState.loading) {\n\t\tconst ContentLoading = loadData(RestaurantsNearContent, query, false);\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Nav />\n\t\t\t\t<div className=\"header-wrapper\">\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header-content\">\n\t\t\t\t\t\t<h1>Find the Best Restaurants Near You</h1>\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tplaceholder=\"Location\" \n\t\t\t\t\t\t\t\tid=\"search-term\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input type=\"submit\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ContentLoading />\n\t\t\t</div>\n\t\t);\t\n\t}\n\treturn (\n\t\t<Loading fullscreen={true} />\n\t);\n\t\n}\n\nfunction RestaurantsNearContent(props) {\n\treturn (\n\t\t<List restaurants={props.data} type=\"near\" />\n\t);\n}\n\nexport default RestaurantsNear;","import React, { useEffect, useState } from 'react';\nimport loadData from './loadData';\nimport filledStar from '../star.svg';\nimport unfilledStar from '../unfilled.svg';\nimport halfStar from '../halfstar.svg';\nimport Loading from './Loading';\nimport Nav from './Nav';\n\nfunction RestaurantDetails(props) {\n\tconst [appState, setAppState] = useState({\n\t\tlatitude: null,\n\t\tlongitude: null,\n\t\tloading: true\n\t});\n\n\tlet id = props.location.id || \"KgpOYAG-r_eDsQXFXt0nnQ\";\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tfunction(position) {\n\t\t\t\tsetAppState({latitude: position.coords.latitude, longitude: position.coords.longitude, loading: false});\n\t    \t},\n\t\t    function(error) {\n\t\t    \tsetAppState({location: 'new york', loading: false});\n\t\t    }\n\t    );\n\t}, [setAppState]);\n\n\tif(!appState.loading) {\n\t\tconst ContentLoading = loadData(RestaurantDetailsContent, {}, true, id);\n\t\treturn (\n\t\t\t<ContentLoading lat={appState.latitude} long={appState.longitude} />\n\t\t);\t\n\t}\n\treturn (\n\t\t<Loading fullscreen={true} />\n\t);\n}\n\nfunction RestaurantDetailsContent(props) {\n\tlet stars = [];\n\tlet filled = Math.floor(props.data.rating);\n\tfor(let i = 0; i < filled; i++) {\n\t\tstars.push('filled');\n\t}\n\tlet half = 0;\n\tif(props.data.rating % 1 !== 0) {\n\t\tstars.push('half');\n\t\thalf = 1;\n\t} \n\tlet unfilled = 5 - filled - half;\n\tfor(let i = 0; i < unfilled; i++) {\n\t\tstars.push('unfilled');\n\t}\n\n\tconst calcDistance = () => {\n\t\tlet lat = props.data.coordinates.latitude;\n\t\tlet long = props.data.coordinates.longitude;\n\t\tlet x = Math.abs(lat - props.lat);\n\t\tlet y = Math.abs(long - props.long);\n\t\treturn Math.round(Math.sqrt(x*x + y*y) * 6900) /100;\n\t}\n\t\n\treturn (\n\t\t<div className=\"restaurant-details\">\n\t\t\t<Nav />\n\t\t\t<div className=\"header-wrapper\" style={{'backgroundImage':'url(' + props.data.image_url +')'}}>\n\t\t\t</div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"details-wrapper\">\n\t\t\t\t\t<div className=\"details-left\">\n\t\t\t\t\t\t<h1>{props.data.name}</h1>\n\t\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t\t<div className=\"star-container\">\n\t\t\t\t\t\t\t{stars.map((type, index) => <DisplayStar type={type} key={index} />)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p>{props.data.review_count + \" reviews\"}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{props.lat ? <p>{calcDistance()} mi away</p> : \"\"}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"details-right\">\n\t\t\t\t\t\t<div className=\"address\">\n\t\t\t\t\t\t\t<h3>Address</h3>\n\t\t\t\t\t\t\t<p>{props.data.location.display_address[0]}</p>\n\t\t\t\t\t\t\t<p>{props.data.location.display_address[1]}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"phone\">\n\t\t\t\t\t\t\t<h3>Phone</h3>\n\t\t\t\t\t\t\t<p>{props.data.display_phone}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction DisplayStar(props) {\n\tconst src = {\n\t\t'filled': filledStar,\n\t\t'unfilled': unfilledStar,\n\t\t'half': halfStar\n\t};\n\treturn (\n\t\t<img src={src[props.type]} alt=\"restaurant\" />\n\t);\n}\n\nexport default RestaurantDetails;","/*global google*/\n\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport youAreHere from '../marker.png';\nimport customIcon from '../pin.png';\n\nfunction MapWidget(props) {\n\tconst mapStyles = {\n\t  width: '100%',\n\t  height: '100%',\n\t};\n\n\tconst coords = {\n\t\tlat: props.latitude || 40.729335,\n\t\tlong: props.longitude || -73.997903\n\t}\n\n\tconst displayMarkers = props.points.map((store, index) => {\n\t    return <Marker key={index} id={index} position={{\n\t       lat: store.coordinates.latitude,\n\t       lng: store.coordinates.longitude\n\t    }} \n\t    icon={{\n\t      url: customIcon,\n\t      scaledSize: new google.maps.Size(24,33)\n\t  \t}} />\n\t});\n\n\tconst mapStyle = [\n\t    {\n\t        \"featureType\": \"administrative\",\n\t        \"elementType\": \"labels.text.fill\",\n\t        \"stylers\": [\n\t            {\n\t                \"color\": \"#444444\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"landscape\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"color\": \"#f2f2f2\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"landscape\",\n\t        \"elementType\": \"geometry\",\n\t        \"stylers\": [\n\t            {\n\t                \"color\": \"#efefef\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"poi\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"off\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"saturation\": -100\n\t            },\n\t            {\n\t                \"lightness\": 45\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.highway\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"simplified\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.highway\",\n\t        \"elementType\": \"geometry.fill\",\n\t        \"stylers\": [\n\t            {\n\t                \"color\": \"#ffbd83\"\n\t            },\n\t            {\n\t                \"saturation\": \"-16\"\n\t            },\n\t            {\n\t                \"lightness\": \"48\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.arterial\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"simplified\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.arterial\",\n\t        \"elementType\": \"labels\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"on\"\n\t            },\n\t            {\n\t                \"lightness\": \"31\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.arterial\",\n\t        \"elementType\": \"labels.icon\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"off\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.local\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"on\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"road.local\",\n\t        \"elementType\": \"labels\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"simplified\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"transit\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"visibility\": \"off\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"water\",\n\t        \"elementType\": \"all\",\n\t        \"stylers\": [\n\t            {\n\t                \"color\": \"#46bcec\"\n\t            },\n\t            {\n\t                \"visibility\": \"on\"\n\t            }\n\t        ]\n\t    },\n\t    {\n\t        \"featureType\": \"water\",\n\t        \"elementType\": \"geometry.fill\",\n\t        \"stylers\": [\n\t            {\n\t                \"color\": \"#8ad1c5\"\n\t            },\n\t            {\n\t                \"saturation\": \"-33\"\n\t            },\n\t            {\n\t                \"lightness\": \"55\"\n\t            }\n\t        ]\n\t    }\n\t]\n\n\t const _mapLoaded = (mapProps, map) => {\n\t    map.setOptions({\n\t       styles: mapStyle\n\t    })\n\t }\n\n    return (\n        <Map\n          google={props.google}\n          zoom={12}\n          style={mapStyles}\n          initialCenter={{ lat: coords.lat, lng: coords.long}} \n          onReady={(mapProps, map) => _mapLoaded(mapProps, map)}\n        >\n        \t<Marker\n        \t\tkey={1234}\n\t\t\t    name={'Your location'}\n\t\t\t    position={{ lat: coords.lat, lng: coords.long}}\n\t\t\t    icon={{\n\t\t\t      url: youAreHere,\n\t\t\t      scaledSize: new google.maps.Size(24,24)\n\t\t\t  \t}} \n\t\t \t />\n        \t{displayMarkers}\n        </Map>\n    );\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: `${process.env.REACT_APP_GOOGLE_API_KEY}`\n})(MapWidget);","import React, { useEffect, useState } from 'react';\nimport List from './List';\nimport loadData from './loadData';\nimport MapWidget from './MapWidget';\nimport Loading from './Loading';\nimport Nav from './Nav';\n\nfunction RestaurantsMap(props) {\n\tconst [appState, setAppState] = useState({\n\t\tlatitude: null,\n\t\tlongitude: null,\n\t\tlocation: null,\n\t\tloading: true\n\t});\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tfunction(position) {\n\t\t\t\tsetAppState({latitude: position.coords.latitude, longitude: position.coords.longitude, loading: false});\n\t    \t},\n\t\t    function(error) {\n\t\t    \tsetAppState({location: 'new york', loading: false});\n\t\t    }\n\t    );\n\t}, [setAppState]);\n\n\tif(!appState.loading) {\n\t\tconst ContentLoading = loadData(RestaurantsMapContent, {latitude: appState.latitude, longitude: appState.longitude, location: 'new york', categories: 'restaurants'}, true);\n\t\treturn (\n\t\t\t<ContentLoading latitude={appState.latitude} longitude={appState.longitude} />\n\t\t);\t\n\t}\n\treturn (\n\t\t<Loading fullscreen={true} />\n\t);\n\t\n}\n\nfunction RestaurantsMapContent(props) {\n\treturn (\n\t\t<div className=\"restaurants-map\">\n\t\t\t<Nav color=\"white\" />\n\t\t\t<div className=\"restaurants-map-wrapper\">\n\t\t\t\t<div className=\"list-wrapper\">\n\t\t\t\t\t<List restaurants={props.data} type=\"near\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"map-wrapper\">\n\t\t\t\t\t<MapWidget latitude={props.latitude} longitude={props.longitude} points={props.data} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default RestaurantsMap;","import React, {useState, useEffect} from 'react';\nimport List from './List';\nimport loadData from './loadData';\nimport Nav from './Nav';\nimport Loading from './Loading';\n\nfunction SearchRestaurants(props) {\n\tconst [appState, setAppState] = useState({\n\t\tloading: true\n\t});\n\n\tconst [query, setQuery] = useState({\n\t\tlatitude: null,\n\t\tlongitude: null,\n\t\tlocation: null,\n\t\tterm: 'balthazar'\n\t});\n\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\tfunction(position) {\n\t\t\t\tsetAppState({loading: false});\n\t\t    \tsetQuery({latitude: position.coords.latitude, longitude: position.coords.longitude, term: query.term});\n\t    \t},\n\t\t    function(error) {\n\t\t    \tsetAppState({loading: false});\n\t\t    \tsetQuery({location: 'new york', term: query.term});\n\t\t    }\n\t    );\n\t}, [setAppState]);\n\n\tconst handleSubmit = (evt) => {\n      evt.preventDefault();\n      let val = document.getElementById('search-term').value;\n      if(val !== \"\" && val !== null && val !== \" \") {\n      \tsetQuery({term: val, location: query.location, latitude: query.latitude, longitude: query.longitude});\n      \tconsole.log(`Submitting Term ${query.term}`);\n      } else {\n      \talert('Please enter text into the search field!');\n      }\n  \t}\n\n  \tif(!appState.loading) {\n\t\tconst ContentLoading = loadData(SearchRestaurantsContent, query, false);\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Nav />\n\t\t\t\t<div className=\"header-wrapper\">\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"header-content\">\n\t\t\t\t\t\t<h1>Find the Best Restaurants Near You</h1>\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\t\tplaceholder=\"Search\" \n\t\t\t\t\t\t\t\tid=\"search-term\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<input type=\"submit\" />\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ContentLoading term={query.term} />\n\t\t\t</div>\n\t\t);\t\n\t}\n\n\treturn (\n\t\t<Loading fullscreen={true} />\n\t);\n}\n\nfunction SearchRestaurantsContent(props) {\n\treturn (\n\t\t<List restaurants={props.data} type=\"search\" term={props.term} />\n\t);\n}\n\nexport default SearchRestaurants;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.scss';\nimport RestaurantsNear from './components/restaurantsNear';\nimport RestaurantDetails from './components/RestaurantDetails';\nimport RestaurantsMap from './components/RestaurantsMap';\nimport SearchRestaurants from './components/SearchRestaurants';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Switch>\n          <Route path=\"/details\" component={RestaurantDetails} />\n          <Route path=\"/map\" component={RestaurantsMap} />\n          <Route path=\"/search\" component={SearchRestaurants} />\n          <Route path=\"/\" component={RestaurantsNear} exact />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}